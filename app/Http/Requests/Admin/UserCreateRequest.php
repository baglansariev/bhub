<?php

namespace App\Http\Requests\Admin;

use Illuminate\Foundation\Http\FormRequest;

class UserCreateRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        return [
            'name'      => 'required|string|max:255',
            'email'     => 'required|string|email|unique:users|max:255',
            'password'  => 'required|string|confirmed|min:8|max:255',
            'role_id'   => 'max:11',
            'image'     => 'image',
        ];
    }

    public function messages()
    {
        parent::messages(); // TODO: Change the autogenerated stub

        return [
            'name.required' => 'Поле Ф.И.О обязательно для заполнения',
            'name.string' => 'Поле Ф.И.О должно буквы строку а не только цифры',
            'name.max' => 'Поле Ф.И.О не должно превышать длинну 255 символов',

            'email.required' => 'Поле E-mail обязательно для заполнения',
            'email.string' => 'Поле E-mail должно буквы строку а не только цифры',
            'email.max' => 'Поле E-mail не должно превышать длинну 255 символов',
            'email.email' => 'Введите корректный e-mail',
            'email.unique' => 'Такой e-mail уже зарегистрирован',

            'password.required' => 'Поле Пароль обязательно для заполнения',
            'password.string' => 'Поле Пароль должно буквы строку а не только цифры',
            'password.max' => 'Поле Пароль не должно превышать длинну 255 символов',
            'password.confirmed' => 'Пароли не совпадают',
            'password.min' => 'Минимальная длинна пароля должна составлять 8 символов',

            'image.image' => 'Формат изображения должен соответствовать (jpeg, png, bmp, gif, svg, или webp)',
        ];
    }
}
